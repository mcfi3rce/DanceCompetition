  How to parse an org file:
#+BEGIN_SRC elisp :results silent
  (defun org-element-tree ()
    (let ((file-path "oet.el")
          (org-element-tree (org-element-parse-buffer))
          (print-circle t))
      (with-temp-buffer
        (insert "(setq oet '")
        (pp org-element-tree (current-buffer))
        (insert ")\n")
        (write-file file-path))
      t))

  (defun parse-table (data)
    (let* ((interpreted (org-element-interpret-data data))
           (table-contents-as-list-of-strings (split-string interpreted "\n"))
           (table-contents (mapcar (lambda (x) (split-string x "|"))
                                   (cdr table-contents-as-list-of-strings))))
      (mapcar (lambda (row)
                (loop for entry in row
                      if (and (stringp entry) (plusp (length entry)))
                      collect (string-to-number entry)))
              table-contents)))

  (defun parse-tables-and-set-table-symbols ()
    (setq table-symbols nil)
    (org-element-map (org-element-parse-buffer)
        'table
      (lambda (data)
        (let (table-name table-symbol)
          (setq table-name (org-element-property :name data))
          (when (not (null table-name))
            (setq table-symbol (intern table-name))
            (set table-symbol (remove-if 'null (parse-table data)))
            (push table-symbol table-symbols)))))
    (reverse table-symbols))
#+END_SRC

  Evaluate this if you want to see the structure of an org element tree.
#+BEGIN_SRC elisp :results raw
  (org-element-tree)
  (load-file "oet.el")
  oet
#+END_SRC

  These two tables will show how the parsing works:
#+name: rule-5-example-1 
| 51 | 6 | 6 | 6 |
| 52 | 1 | 3 | 2 |
| 53 | 5 | 2 | 4 |
| 54 | 2 | 1 | 1 |
| 55 | 3 | 4 | 3 |
| 56 | 4 | 5 | 5 |

#+name: rule-5-example-2
| 51 | 2 | 6 | 2 |
| 52 | 4 | 3 | 3 |
| 53 | 3 | 7 | 5 |
| 54 | 1 | 1 | 1 |
| 55 | 5 | 4 | 4 |
| 56 | 7 | 2 | 7 |
| 57 | 6 | 5 | 6 |

#+BEGIN_SRC elisp :results raw
  (parse-tables-and-set-table-symbols)
#+END_SRC

#+RESULTS:
(rule-5-example-1 rule-5-example-2)

#+BEGIN_SRC elisp
  rule-5-example-1
#+END_SRC

#+BEGIN_SRC elisp
  rule-5-example-2
#+END_SRC
